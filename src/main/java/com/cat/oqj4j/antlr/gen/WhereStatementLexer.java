// Generated from F:/developer/oql4j/srccode/src/main/resources/altnr/WhereStatement.g4 by ANTLR 4.13.1
package com.cat.oqj4j.antlr.gen;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class WhereStatementLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, AND=6, OR=7, IN=8, IS=9, BETWEEN=10, 
		NOT=11, STRING=12, FIELDPLACE=13, BOOLEAN=14, NULL=15, NUMBER=16, EQ=17, 
		GT=18, LT=19, GE=20, LE=21, NEQ=22, COMMA=23, ID=24, WS=25;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "AND", "OR", "IN", "IS", "BETWEEN", 
			"NOT", "STRING", "FIELDPLACE", "BOOLEAN", "NULL", "NUMBER", "INT", "SNEXP", 
			"EQ", "GT", "LT", "GE", "LE", "NEQ", "COMMA", "ID", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "')'", "'f{'", "'}'", "'F{'", null, null, null, null, null, 
			null, null, null, null, null, null, "'='", "'>'", "'<'", "'>='", "'<='", 
			null, "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, "AND", "OR", "IN", "IS", "BETWEEN", 
			"NOT", "STRING", "FIELDPLACE", "BOOLEAN", "NULL", "NUMBER", "EQ", "GT", 
			"LT", "GE", "LE", "NEQ", "COMMA", "ID", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public WhereStatementLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WhereStatement.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0019\u00c9\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0005\u000b_\b\u000b"+
		"\n\u000b\f\u000bb\t\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0005\fl\b\f\n\f\f\fo\t\f\u0001\f\u0001\f\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0003"+
		"\r|\b\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0003\u000f\u0084\b\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0003\u000f\u008a\b\u000f\u0001\u000f\u0003\u000f\u008d\b\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0003\u000f\u0093\b\u000f"+
		"\u0001\u000f\u0003\u000f\u0096\b\u000f\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0005\u0010\u009b\b\u0010\n\u0010\f\u0010\u009e\t\u0010\u0003\u0010\u00a0"+
		"\b\u0010\u0001\u0011\u0001\u0011\u0003\u0011\u00a4\b\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016"+
		"\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0003\u0017"+
		"\u00b8\b\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0005\u0019"+
		"\u00be\b\u0019\n\u0019\f\u0019\u00c1\t\u0019\u0001\u001a\u0004\u001a\u00c4"+
		"\b\u001a\u000b\u001a\f\u001a\u00c5\u0001\u001a\u0001\u001a\u0001`\u0000"+
		"\u001b\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0000#\u0000%\u0011\'\u0012)\u0013+\u0014-\u0015"+
		"/\u00161\u00173\u00185\u0019\u0001\u0000\u0015\u0002\u0000AAaa\u0002\u0000"+
		"NNnn\u0002\u0000DDdd\u0002\u0000OOoo\u0002\u0000RRrr\u0002\u0000IIii\u0002"+
		"\u0000SSss\u0002\u0000BBbb\u0002\u0000EEee\u0002\u0000TTtt\u0002\u0000"+
		"WWww\u0002\u0000\"\"\'\'\u0002\u0000UUuu\u0002\u0000FFff\u0002\u0000L"+
		"Lll\u0001\u000019\u0001\u000009\u0002\u0000++--\u0002\u0000AZaz\u0004"+
		"\u000009AZ__az\u0003\u0000\t\n\r\r  \u00d5\u0000\u0001\u0001\u0000\u0000"+
		"\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000"+
		"\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000"+
		"\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000"+
		"\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000"+
		"\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'"+
		"\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000"+
		"\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000"+
		"\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005"+
		"\u0001\u0000\u0000\u0000\u00017\u0001\u0000\u0000\u0000\u00039\u0001\u0000"+
		"\u0000\u0000\u0005;\u0001\u0000\u0000\u0000\u0007>\u0001\u0000\u0000\u0000"+
		"\t@\u0001\u0000\u0000\u0000\u000bC\u0001\u0000\u0000\u0000\rG\u0001\u0000"+
		"\u0000\u0000\u000fJ\u0001\u0000\u0000\u0000\u0011M\u0001\u0000\u0000\u0000"+
		"\u0013P\u0001\u0000\u0000\u0000\u0015X\u0001\u0000\u0000\u0000\u0017\\"+
		"\u0001\u0000\u0000\u0000\u0019e\u0001\u0000\u0000\u0000\u001b{\u0001\u0000"+
		"\u0000\u0000\u001d}\u0001\u0000\u0000\u0000\u001f\u0095\u0001\u0000\u0000"+
		"\u0000!\u009f\u0001\u0000\u0000\u0000#\u00a1\u0001\u0000\u0000\u0000%"+
		"\u00a7\u0001\u0000\u0000\u0000\'\u00a9\u0001\u0000\u0000\u0000)\u00ab"+
		"\u0001\u0000\u0000\u0000+\u00ad\u0001\u0000\u0000\u0000-\u00b0\u0001\u0000"+
		"\u0000\u0000/\u00b7\u0001\u0000\u0000\u00001\u00b9\u0001\u0000\u0000\u0000"+
		"3\u00bb\u0001\u0000\u0000\u00005\u00c3\u0001\u0000\u0000\u000078\u0005"+
		"(\u0000\u00008\u0002\u0001\u0000\u0000\u00009:\u0005)\u0000\u0000:\u0004"+
		"\u0001\u0000\u0000\u0000;<\u0005f\u0000\u0000<=\u0005{\u0000\u0000=\u0006"+
		"\u0001\u0000\u0000\u0000>?\u0005}\u0000\u0000?\b\u0001\u0000\u0000\u0000"+
		"@A\u0005F\u0000\u0000AB\u0005{\u0000\u0000B\n\u0001\u0000\u0000\u0000"+
		"CD\u0007\u0000\u0000\u0000DE\u0007\u0001\u0000\u0000EF\u0007\u0002\u0000"+
		"\u0000F\f\u0001\u0000\u0000\u0000GH\u0007\u0003\u0000\u0000HI\u0007\u0004"+
		"\u0000\u0000I\u000e\u0001\u0000\u0000\u0000JK\u0007\u0005\u0000\u0000"+
		"KL\u0007\u0001\u0000\u0000L\u0010\u0001\u0000\u0000\u0000MN\u0007\u0005"+
		"\u0000\u0000NO\u0007\u0006\u0000\u0000O\u0012\u0001\u0000\u0000\u0000"+
		"PQ\u0007\u0007\u0000\u0000QR\u0007\b\u0000\u0000RS\u0007\t\u0000\u0000"+
		"ST\u0007\n\u0000\u0000TU\u0007\b\u0000\u0000UV\u0007\b\u0000\u0000VW\u0007"+
		"\u0001\u0000\u0000W\u0014\u0001\u0000\u0000\u0000XY\u0007\u0001\u0000"+
		"\u0000YZ\u0007\u0003\u0000\u0000Z[\u0007\t\u0000\u0000[\u0016\u0001\u0000"+
		"\u0000\u0000\\`\u0007\u000b\u0000\u0000]_\t\u0000\u0000\u0000^]\u0001"+
		"\u0000\u0000\u0000_b\u0001\u0000\u0000\u0000`a\u0001\u0000\u0000\u0000"+
		"`^\u0001\u0000\u0000\u0000ac\u0001\u0000\u0000\u0000b`\u0001\u0000\u0000"+
		"\u0000cd\u0007\u000b\u0000\u0000d\u0018\u0001\u0000\u0000\u0000ef\u0005"+
		"$\u0000\u0000fg\u0005{\u0000\u0000gh\u0001\u0000\u0000\u0000hm\u00033"+
		"\u0019\u0000ij\u0005.\u0000\u0000jl\u00033\u0019\u0000ki\u0001\u0000\u0000"+
		"\u0000lo\u0001\u0000\u0000\u0000mk\u0001\u0000\u0000\u0000mn\u0001\u0000"+
		"\u0000\u0000np\u0001\u0000\u0000\u0000om\u0001\u0000\u0000\u0000pq\u0005"+
		"}\u0000\u0000q\u001a\u0001\u0000\u0000\u0000rs\u0007\t\u0000\u0000st\u0007"+
		"\u0004\u0000\u0000tu\u0007\f\u0000\u0000u|\u0007\b\u0000\u0000vw\u0007"+
		"\r\u0000\u0000wx\u0007\u0000\u0000\u0000xy\u0007\u000e\u0000\u0000yz\u0007"+
		"\u0006\u0000\u0000z|\u0007\b\u0000\u0000{r\u0001\u0000\u0000\u0000{v\u0001"+
		"\u0000\u0000\u0000|\u001c\u0001\u0000\u0000\u0000}~\u0007\u0001\u0000"+
		"\u0000~\u007f\u0007\f\u0000\u0000\u007f\u0080\u0007\u000e\u0000\u0000"+
		"\u0080\u0081\u0007\u000e\u0000\u0000\u0081\u001e\u0001\u0000\u0000\u0000"+
		"\u0082\u0084\u0005-\u0000\u0000\u0083\u0082\u0001\u0000\u0000\u0000\u0083"+
		"\u0084\u0001\u0000\u0000\u0000\u0084\u0085\u0001\u0000\u0000\u0000\u0085"+
		"\u0086\u0003!\u0010\u0000\u0086\u0087\u0005.\u0000\u0000\u0087\u0089\u0003"+
		"!\u0010\u0000\u0088\u008a\u0003#\u0011\u0000\u0089\u0088\u0001\u0000\u0000"+
		"\u0000\u0089\u008a\u0001\u0000\u0000\u0000\u008a\u0096\u0001\u0000\u0000"+
		"\u0000\u008b\u008d\u0005-\u0000\u0000\u008c\u008b\u0001\u0000\u0000\u0000"+
		"\u008c\u008d\u0001\u0000\u0000\u0000\u008d\u008e\u0001\u0000\u0000\u0000"+
		"\u008e\u008f\u0003!\u0010\u0000\u008f\u0090\u0003#\u0011\u0000\u0090\u0096"+
		"\u0001\u0000\u0000\u0000\u0091\u0093\u0005-\u0000\u0000\u0092\u0091\u0001"+
		"\u0000\u0000\u0000\u0092\u0093\u0001\u0000\u0000\u0000\u0093\u0094\u0001"+
		"\u0000\u0000\u0000\u0094\u0096\u0003!\u0010\u0000\u0095\u0083\u0001\u0000"+
		"\u0000\u0000\u0095\u008c\u0001\u0000\u0000\u0000\u0095\u0092\u0001\u0000"+
		"\u0000\u0000\u0096 \u0001\u0000\u0000\u0000\u0097\u00a0\u00050\u0000\u0000"+
		"\u0098\u009c\u0007\u000f\u0000\u0000\u0099\u009b\u0007\u0010\u0000\u0000"+
		"\u009a\u0099\u0001\u0000\u0000\u0000\u009b\u009e\u0001\u0000\u0000\u0000"+
		"\u009c\u009a\u0001\u0000\u0000\u0000\u009c\u009d\u0001\u0000\u0000\u0000"+
		"\u009d\u00a0\u0001\u0000\u0000\u0000\u009e\u009c\u0001\u0000\u0000\u0000"+
		"\u009f\u0097\u0001\u0000\u0000\u0000\u009f\u0098\u0001\u0000\u0000\u0000"+
		"\u00a0\"\u0001\u0000\u0000\u0000\u00a1\u00a3\u0007\b\u0000\u0000\u00a2"+
		"\u00a4\u0007\u0011\u0000\u0000\u00a3\u00a2\u0001\u0000\u0000\u0000\u00a3"+
		"\u00a4\u0001\u0000\u0000\u0000\u00a4\u00a5\u0001\u0000\u0000\u0000\u00a5"+
		"\u00a6\u0003!\u0010\u0000\u00a6$\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005"+
		"=\u0000\u0000\u00a8&\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005>\u0000"+
		"\u0000\u00aa(\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005<\u0000\u0000\u00ac"+
		"*\u0001\u0000\u0000\u0000\u00ad\u00ae\u0005>\u0000\u0000\u00ae\u00af\u0005"+
		"=\u0000\u0000\u00af,\u0001\u0000\u0000\u0000\u00b0\u00b1\u0005<\u0000"+
		"\u0000\u00b1\u00b2\u0005=\u0000\u0000\u00b2.\u0001\u0000\u0000\u0000\u00b3"+
		"\u00b4\u0005!\u0000\u0000\u00b4\u00b8\u0005=\u0000\u0000\u00b5\u00b6\u0005"+
		"<\u0000\u0000\u00b6\u00b8\u0005>\u0000\u0000\u00b7\u00b3\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b5\u0001\u0000\u0000\u0000\u00b80\u0001\u0000\u0000\u0000"+
		"\u00b9\u00ba\u0005,\u0000\u0000\u00ba2\u0001\u0000\u0000\u0000\u00bb\u00bf"+
		"\u0007\u0012\u0000\u0000\u00bc\u00be\u0007\u0013\u0000\u0000\u00bd\u00bc"+
		"\u0001\u0000\u0000\u0000\u00be\u00c1\u0001\u0000\u0000\u0000\u00bf\u00bd"+
		"\u0001\u0000\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00c04\u0001"+
		"\u0000\u0000\u0000\u00c1\u00bf\u0001\u0000\u0000\u0000\u00c2\u00c4\u0007"+
		"\u0014\u0000\u0000\u00c3\u00c2\u0001\u0000\u0000\u0000\u00c4\u00c5\u0001"+
		"\u0000\u0000\u0000\u00c5\u00c3\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001"+
		"\u0000\u0000\u0000\u00c6\u00c7\u0001\u0000\u0000\u0000\u00c7\u00c8\u0006"+
		"\u001a\u0000\u0000\u00c86\u0001\u0000\u0000\u0000\u000f\u0000`m{\u0083"+
		"\u0089\u008c\u0092\u0095\u009c\u009f\u00a3\u00b7\u00bf\u00c5\u0001\u0006"+
		"\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}